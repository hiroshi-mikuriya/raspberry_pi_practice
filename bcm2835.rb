require 'fiddle/import'

##
# libbcm2835
module BCM
  extend Fiddle::Importer
  dlload '/usr/local/lib/libbcm2835.so'
  extern 'int bcm2835_init(void)'
  extern 'int bcm2835_close(void)'
  extern 'void  bcm2835_set_debug(uint8_t debug)'
  extern 'unsigned int bcm2835_version(void)'
  extern 'uint32_t* bcm2835_regbase(uint8_t regbase)'
  extern 'uint32_t bcm2835_peri_read(volatile uint32_t* paddr)'
  extern 'uint32_t bcm2835_peri_read_nb(volatile uint32_t* paddr)'
  extern 'void bcm2835_peri_write(volatile uint32_t* paddr, uint32_t value)'
  extern 'void bcm2835_peri_write_nb(volatile uint32_t* paddr, uint32_t value)'
  extern 'void bcm2835_peri_set_bits(volatile uint32_t* paddr, uint32_t value, uint32_t mask)'
  extern 'void bcm2835_gpio_fsel(uint8_t pin, uint8_t mode)'
  extern 'void bcm2835_gpio_set(uint8_t pin)'
  extern 'void bcm2835_gpio_clr(uint8_t pin)'
  extern 'void bcm2835_gpio_set_multi(uint32_t mask)'
  extern 'void bcm2835_gpio_clr_multi(uint32_t mask)'
  extern 'uint8_t bcm2835_gpio_lev(uint8_t pin)'
  extern 'uint8_t bcm2835_gpio_eds(uint8_t pin)'
  extern 'void bcm2835_gpio_set_eds(uint8_t pin)'
  extern 'void bcm2835_gpio_ren(uint8_t pin)'
  extern 'void bcm2835_gpio_clr_ren(uint8_t pin)'
  extern 'void bcm2835_gpio_fen(uint8_t pin)'
  extern 'void bcm2835_gpio_clr_fen(uint8_t pin)'
  extern 'void bcm2835_gpio_hen(uint8_t pin)'
  extern 'void bcm2835_gpio_clr_hen(uint8_t pin)'
  extern 'void bcm2835_gpio_len(uint8_t pin)'
  extern 'void bcm2835_gpio_clr_len(uint8_t pin)'
  extern 'void bcm2835_gpio_aren(uint8_t pin)'
  extern 'void bcm2835_gpio_clr_aren(uint8_t pin)'
  extern 'void bcm2835_gpio_afen(uint8_t pin)'
  extern 'void bcm2835_gpio_clr_afen(uint8_t pin)'
  extern 'void bcm2835_gpio_pud(uint8_t pud)'
  extern 'void bcm2835_gpio_pudclk(uint8_t pin, uint8_t on)'
  extern 'uint32_t bcm2835_gpio_pad(uint8_t group)'
  extern 'void bcm2835_gpio_set_pad(uint8_t group, uint32_t control)'
  extern 'void bcm2835_delay (unsigned int millis)'
  extern 'void bcm2835_delayMicroseconds (uint64_t micros)'
  extern 'void bcm2835_gpio_write(uint8_t pin, uint8_t on)'
  extern 'void bcm2835_gpio_write_multi(uint32_t mask, uint8_t on)'
  extern 'void bcm2835_gpio_write_mask(uint32_t value, uint32_t mask)'
  extern 'void bcm2835_gpio_set_pud(uint8_t pin, uint8_t pud)'
  extern 'void bcm2835_spi_begin(void)'
  extern 'void bcm2835_spi_end(void)'
  extern 'void bcm2835_spi_setBitOrder(uint8_t order)'
  extern 'void bcm2835_spi_setClockDivider(uint16_t divider)'
  extern 'void bcm2835_spi_setDataMode(uint8_t mode)'
  extern 'void bcm2835_spi_chipSelect(uint8_t cs)'
  extern 'void bcm2835_spi_setChipSelectPolarity(uint8_t cs, uint8_t active)'
  extern 'uint8_t bcm2835_spi_transfer(uint8_t value)'
  extern 'void bcm2835_spi_transfernb(char* tbuf, char* rbuf, uint32_t len)'
  extern 'void bcm2835_spi_transfern(char* buf, uint32_t len)'
  extern 'void bcm2835_spi_writenb(char* buf, uint32_t len)'
  extern 'void bcm2835_i2c_begin(void)'
  extern 'void bcm2835_i2c_end(void)'
  extern 'void bcm2835_i2c_setSlaveAddress(uint8_t addr)'
  extern 'void bcm2835_i2c_setClockDivider(uint16_t divider)'
  extern 'void bcm2835_i2c_set_baudrate(uint32_t baudrate)'
  extern 'uint8_t bcm2835_i2c_write(const char * buf, uint32_t len)'
  extern 'uint8_t bcm2835_i2c_read(char* buf, uint32_t len)'
  extern 'uint8_t bcm2835_i2c_read_register_rs(char* regaddr, char* buf, uint32_t len)'
  extern 'uint8_t bcm2835_i2c_write_read_rs(char* cmds, uint32_t cmds_len, char* buf, uint32_t buf_len)'
  extern 'uint64_t bcm2835_st_read(void)'
  extern 'void bcm2835_st_delay(uint64_t offset_micros, uint64_t micros)'
  extern 'void bcm2835_pwm_set_clock(uint32_t divisor)'
  extern 'void bcm2835_pwm_set_mode(uint8_t channel, uint8_t markspace, uint8_t enabled)'
  extern 'void bcm2835_pwm_set_range(uint8_t channel, uint32_t range)'
  extern 'void bcm2835_pwm_set_data(uint8_t channel, uint32_t data)'
end
